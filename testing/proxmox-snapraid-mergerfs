#!/bin/bash

## starting ##
[[ -z "$(which curl)" ]] && apt install -y curl
source /dev/stdin <<< "$(curl -s https://raw.githubusercontent.com/ryda20/bashlog/master/log.sh)"


##
## SNAPRAID
##
## https://www.snapraid.it

# require for build
log "install building requirements..."

apt install gcc git make -y

log "download and build snapraid..."
wget https://github.com/amadvance/snapraid/releases/download/v12.2/snapraid-12.2.tar.gz
tar xzvf snapraid-12.2.tar.gz
cd snapraid-12.2/
./configure
make
make check
make install
cd ..
cp ~/snapraid-12.2/snapraid.conf.example /etc/snapraid.conf
cd ..

echo "cleanup..."
rm -rf snapraid*

echo "repair disk you want to use with file system you want to like ext4 for xfs"
echo

## choosing disk you want to use
log "list of disks by id:"
ls -la /dev/disk/by-id/ | grep part1  | cut -d " " -f 11-20

partity_disks=""
read -p "how many partity disk you want to use?" partitydisknumb
for i in $(seq 1 $partitydisknumb); do
	read -p "pls enter partity disk path (by id) $i: " pdisk
	partity_disks="${partity_disks} ${pdisk}"
done

data_disks=""
read -p "how many data disk you want to use?" datadisknumb
for i in $(seq 1 $datadisknumb); do
	read -p "pls enter data disk path (by id) $i: " ddisk
	data_disks="${data_disks} ${ddisk}"
done

content_disks=""
read -p "how many content disk you want to use?" contentdisknumb
for i in $(seq 1 $contentdisknumb); do
	read -p "pls enter content disk path (by id) $i: " cdisk
	content_disks="${content_disks} ${cdisk}"
done

basedir=/mnt/snapraid
mkdir -p $basedir

log "create data disk mount directories"
data_disks_arr=($data_disks)
data_disks_arr_len=${#data_disks_arr}
for i in $(seq 1 ${data_disks_arr_len}); do
	mkdir -p "${basedir}/data/disk${i}"
done
# mkdir -p ${basedir}/data/{disk1,disk2,disk3,disk4}


log "Create parity disk mount directories"
partity_disks_arr=(${partity_disks})
partity_disks_arr_len=${#partity_disks_arr}
for i in $(seq 1 ${partity_disks_arr_len}); do
	mkdir -p "${basedir}/parity/$i-parity"
done
# mkdir -p /mnt/snapraid/parity/1-parity

diskformat=ext4

log "mount it in /etc/fstab"
echo "## SnapRAID Data Disk" >> /etc/fstab
for i in $(seq 1 ${data_disks_arr_len}); do
	# mkdir -p "${basedir}/data/disk${i}"
	str="${data_disks_arr[$i]} ${basedir}/data/disk${i} $diskformat defaults 0 2"
	log "appending: $str -> /etc/fstab"
	echo "$str" >> /etc/fstab
done
# # SnapRAID Disks
# /dev/disk/by-id/ata-HGST_HDN724040ALE640_PK2334PBHDYY0R-part1 /mnt/data/disk1 ext4 defaults 0 2
# /dev/disk/by-id/ata-HGST_HDS5C4040ALE630_PL2331LAG90YYJ-part1 /mnt/data/disk2 ext4 defaults 0 2
# /dev/disk/by-id/ata-HGST_HUS726060ALA640_AR31001EG1YE8C-part1 /mnt/data/disk3 ext4 defaults 0 2
# /dev/disk/by-id/ata-Hitachi_HDS5C3030ALA630_MJ0351YNYYYK9A-part1 /mnt/data/disk4 ext4 defaults 0 2


# # Parity Disks
# /dev/disk/by-id/ata-Hitachi_HDS5C3030ALA630_MJ1313YNGYYYJC-part1 /mnt/parity/1-parity ext4 defaults 0 2
echo "## SnapRAID Parity Disks" >> /etc/fstab
for i in $(seq 1 ${partity_disks_arr_len}); do
	# mkdir -p "${basedir}/parity/$i-parity"
	str="${partity_disks_arr[$i]} ${basedir}/parity/$i-parity $diskformat defaults 0 2"
	log "appending: $str -> /etc/fstab"
	echo "$str" >> /etc/fstab
done


log "change snapraid configuration"
for i in $(seq 1 ${partity_disks_arr_len}); do
	# mkdir -p "${basedir}/parity/$i-parity"
	str="parity ${basedir}/parity/$i-parity/snapraid.parity"
	log "appending: $str -> /etc/snapraid.conf"
	echo "$str" >> /etc/snapraid.conf
done
# nano /etc/snapraid.conf
# parity /mnt/snapraid/parity/1-parity/snapraid.parity
# Or multi parity files setup
# parity /mnt/snapraid/split-parity/parity1-disk1/part1.parity,/mnt/split-parity/parity1-disk2/part2.parity
# 2-parity /mnt/snapraid/split-parity/parity2-disk1/part1.parity,/mnt/split-parity/parity2-disk2/part2.parity
# readmore: 7.2 (2,3,4,5,6)-parity FILE [,FILE] ... https://www.snapraid.it/manual
# #


for i in $(seq 1 ${data_disks_arr_len}); do
	# mkdir -p "${basedir}/data/disk${i}"
	str="disk d${i} ${basedir}/data/disk${i}"
	log "appending: $str -> /etc/snapraid.conf"
	echo "$str" >> /etc/snapraid.conf
done
## where do you want to store data?
# disk d1 /mnt/snapraid/data/disk1/
# disk d2 /mnt/snapraid/data/disk2/
# disk d3 /mnt/snapraid/data/disk3/
# disk d4 /mnt/snapraid/data/disk4/

content_disks_arr=(${content_disks})
content_disks_arr_len=${#content_disks_arr}

for i in $(seq 1 $content_disks_arr_len); do
	mkdir -p "${basedir}/data/disk${i}"
	str="content ${basedir}/data/disk${i}/content"
	log "appending: $str -> /etc/snapraid.conf"
	echo "$str" >> /etc/snapraid.conf
done
read -p "do you want to save a content to local disk (/var/snapraid/content)? [Y/n]" answer
answer=${answer:-y}
[[ "${answer}" == "y" ]] && echo "content /var/snapraid/content" >> /etc/snapraid.conf

## Where do you want to save "content"?
# content /var/snapraid/content
# content /mnt/snapraid/data/disk1/content
# content /mnt/snapraid/data/disk2/content
# content /mnt/snapraid/data/disk3/content
# content /mnt/snapraid/data/disk4/content
# #


# #
## what do you want to exclude?
# exclude *.bak
# exclude *.unrecoverable
# exclude /tmp/
# exclude /lost+found/
# exclude .AppleDouble
# exclude ._AppleDouble
# exclude .DS_Store
# exclude .Thumbs.db
# exclude .fseventsd
# exclude .Spotlight-V100
# exclude .TemporaryItems
# exclude .Trashes
# exclude .AppleDB
# #
## block size value
# block_size 256

echo "create directory to save content file in local path, too.../var/snapraid/"
mkdir -p /var/snapraid/

##
## MergerFS to merge content of multiply disks to one mount point for easy access and managerment
##
# https://www.linuxserver.io/user/pages/content/images/2016/09/mergerfs.png

apt-get install g++ pkg-config git git-buildpackage pandoc debhelper libfuse-dev libattr1-dev -y
git clone https://github.com/trapexit/mergerfs.git 
cd mergerfs
make clean
make deb
cd ..
dpkg -i mergerfs*_amd64.deb
rm mergerfs*_amd64.deb mergerfs*_amd64.changes mergerfs*.dsc mergerfs*.tar.gz

echo "adding config to /etc/fstab. note: dont use cache.files=off - it's stop backup file from proxmox"
# /mnt/data/* /mnt/storage fuse.mergerfs threads=12,allow_other,use_ino,dropcacheonclose=true,category.create=mfs,moveonenospc=true,minfreespace=20G,fsname=mergerfsPool,nonempty 0 0
mdkir -p /mnt/storage


## REFS
# https://zackreed.me/setting-up-snapraid-on-ubuntu/
# https://zackreed.me/snapraid-split-parity-sync-script/
# https://www.linuxserver.io/blog/2017-06-24-the-perfect-media-server-2017
